<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.axonactive</groupId>
	<artifactId>dojo</artifactId>
	<version>0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>dojo</name>
	<description>
		This is a very simple Jakarta EE application generated by the official Eclipse Starter.
	</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.report.sourceEncoding>UTF-8</project.report.sourceEncoding>
		<maven.compiler.release>17</maven.compiler.release>
		<jakartaee-api.version>8.0.0</jakartaee-api.version>
		<compiler-plugin.version>3.11.0</compiler-plugin.version>
		<war-plugin.version>3.3.2</war-plugin.version>
		<lombok.version>1.18.30</lombok.version>
		<org.hibernate.version>6.4.1.Final</org.hibernate.version>
		<java-jwt.version>4.4.0</java-jwt.version>
		<flyway-plugin.version>9.3.0</flyway-plugin.version>
		<postgre-plugin.version>42.7.1</postgre-plugin.version>
		<junit.version>5.9.3</junit.version>
		<mockito.version>5.8.0</mockito.version>
		<jbcrypt.version>0.4</jbcrypt.version>
		<jackson-datatype.version>2.13.4</jackson-datatype.version>
		<jackson-databind.version>2.14.0-rc1</jackson-databind.version>
		<jacoco.version>0.8.11</jacoco.version>
		<org.mapstruct.version>1.5.2.Final</org.mapstruct.version>
		<lombok-mapstruct-binding-version>0.2.0</lombok-mapstruct-binding-version>
		<io-swagger-version>1.6.13</io-swagger-version>
		<log4j2.version>2.19.0</log4j2.version>
		<download-maven-plugin-version>1.8.0</download-maven-plugin-version>
		<maven-resources-plugin-version>3.3.0</maven-resources-plugin-version>
		<replacer-version>1.5.3</replacer-version>
		<poi-version>5.2.3</poi-version>
		<sonar-plugin.version>3.10.0.2594</sonar-plugin.version>
		<!-- Sonar configuration -->
		<sonar.projectKey>jakarta-ee-practice</sonar.projectKey>
		<sonar.projectName>jakarta-ee-practice</sonar.projectName>
		<sonar.projectVersion>0.5.0</sonar.projectVersion>
		<sonar.coverage.exclusions>
			**/main/**/base/**/*.*,
			**/main/**/constants/**/*.*,
			**/main/**/dao/**/*.*,
			**/main/**/dto/**/*.*,
			**/main/**/entity/**/*.*,
			**/main/**/rest/**/*.*,
			**/main/**/mapper/**/*.*
		</sonar.coverage.exclusions>
		<caffeine-version>3.1.8</caffeine-version>
		<itextpdf-version>5.5.13.3</itextpdf-version>
	</properties>

	<distributionManagement>
		<repository>
			<id>local-repo</id>
			<url>file://${user.home}/.m2/repository</url>
		</repository>
	</distributionManagement>

	<dependencies>
		<!-- Jakarta EE 8-->
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-api</artifactId>
			<version>${jakartaee-api.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- JPA/Hibernate -->
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${org.hibernate.version}</version>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- java jwt -->
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>${java-jwt.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Flyway -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flyway-plugin.version}</version>
		</dependency>

		<!-- Postgresql -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgre-plugin.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>RELEASE</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.mindrot</groupId>
			<artifactId>jbcrypt</artifactId>
			<version>${jbcrypt.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson-datatype.version}</version>
		</dependency>

		<!-- Jackson json binding -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-databind.version}</version>
		</dependency>

		<!-- Mapstruct -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>

		<!-- Swagger -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${io-swagger-version}</version>
		</dependency>

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jaxrs</artifactId>
			<version>${io-swagger-version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>

		<!-- poi for excel -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi-version}</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/com.itextpdf/itextpdf -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>${itextpdf-version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine -->
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
			<version>${caffeine-version}</version>
		</dependency>

		<dependency>
			<groupId>com.rabbitmq</groupId>
			<artifactId>amqp-client</artifactId>
			<version>5.20.0</version>
		</dependency>

		<!--		elasticsearch-->
		<dependency>
			<groupId>co.elastic.clients</groupId>
			<artifactId>elasticsearch-java</artifactId>
			<version>8.13.2</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>dojo</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<!--Resolve Lombok and Mapstruct conflict-->
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok-mapstruct-binding-version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${war-plugin.version}</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- Upload war file to WildFly deployment  -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>2.0.2</version> <!-- Use the latest version -->
				<executions>
					<execution>
						<id>copy-to-wildfly</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload-single</goal>
						</goals>
						<configuration>
							<fromFile>${project.build.directory}/${project.build.finalName}.war</fromFile>
							<url>file://${env.JBOSS_HOME}/standalone/deployments</url>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- swagger plugin:  downloads the latest swagger-ui & unpack to target folder -->
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>${download-maven-plugin-version}</version>
				<executions>
					<execution>
						<id>swagger-ui</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<skipCache>false</skipCache>
							<url>https://github.com/swagger-api/swagger-ui/archive/master.tar.gz</url>
							<unpack>true</unpack>
							<outputDirectory>${project.build.directory}/swagger</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- swagger plugin: copy unpack swagger folder to docs folder -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin-version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${project.build.finalName}/docs</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}/swagger/swagger-ui-master/dist</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- move do a token substitution in Swagger-UI’s index.html & point to http://localhost:8080/dojo/api/swagger.json -->
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<version>${replacer-version}</version>
				<artifactId>replacer</artifactId>
				<executions>
					<execution>
						<id>replace-swagger-json-location</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<file>${project.build.directory}/${project.build.finalName}/docs/swagger-initializer.js</file>
					<replacements>
						<replacement>
							<token>https://petstore.swagger.io/v2/swagger.json</token>
							<value>http://localhost:8080/dojo/swagger/swagger.json</value>
						</replacement>
						<replacement>
							<token>deepLinking: true</token>
							<value>deepLinking: true, validatorUrl : false</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<configuration>
					<includes>
						<include>com/axonactive/dojo/**</include>
					</includes>
					<excludes>
						<exclude>com/axonactive/dojo/base/**</exclude>
						<exclude>**/entity/**</exclude>
						<exclude>**/dto/**</exclude>
						<exclude>**/constants/**</exclude>
						<exclude>**/rest/**</exclude>
						<exclude>**/dao/**</exclude>
					</excludes>
				</configuration>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report-integration</id>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.80</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-plugin.version}</version>
				<executions>
					<execution>
						<!-- Auto skip sonar when mvn build and deploy with -DskipTests -->
						<configuration>
							<skip>${skipTests}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>local</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.flywaydb</groupId>
						<artifactId>flyway-maven-plugin</artifactId>
						<version>${flyway-plugin.version}</version>
						<configuration>
							<configFiles>
								<configFile>src/main/resources/config/local/flyway.properties</configFile>
							</configFiles>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
